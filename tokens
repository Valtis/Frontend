Notes: 
Letter means any value of (a - z) 
Number means any value of (0 - 9)
Whitespace breaks tokens into two; that is

Reserved keywords

if, while, let, fn, int, string, float, double

Symbols (note: | used to separate symbols):

Equality|Greater than|Lesser than: 		== | > | < 
Assignment: 					= 
Plus|Minus|Multiply|Divide: 			+ | - | * | \
Left|Right parenthesis: 			( | )
Left|Right brace: 				{ | }
Left|Right square bracket: 			[ | ] 
Quote: 						"
Comment: 					//


Identifiers:

Identifiers are strings separated by whitespace that start with letter or underscore (_) and may contain letters, numbers and underscores: 

Example identifiers: abc, _abc, ab123_cde are all identifiers.


Numbers:

Integer constants are strings separated by whitespace that may start with +, - or number and which otherwise contain only numbers. Integers must contain at least one number.


Example integers: 1245, -12345 and +12345 are all integer constants.

Floating point constants are strings separated by whitespace that may start with +, -, number or dot (.). If string did not start with dot, they may contain numbers and optional dot followed by more numbers, and optional type letter. Otherwise floating point number may only contain numbers and optional type letter. Floating point number must contain at least single number.

Optional type letter is either f or d. If type letter is not specified, it is assumed to be d. 

Example floating point numbers: .134, -0.134, +0.123, +0f, -5d, 3345.32 and -0.23445f are all valid floating point numbers.

The type letter declares the value to be of double or floating type. Double letter must only be used if the value in question would otherwise be interpreted as a integer.


Text:
 
Text constant are strings that start and begin with " and contain any ascii character in the middle. 
